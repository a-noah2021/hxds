<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hxds.mis.api.db.dao.UserDao">

    <select id="searchUserPermissions" parameterType="int" resultType="String">
        SELECT DISTINCT p.permission_name
        FROM tb_user u
                 JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
                 JOIN tb_permission p ON JSON_CONTAINS(r.permissions, CAST(p.id AS CHAR))
        WHERE u.id = #{userId}
          AND u.status = 1
    </select>
    <select id="searchUserSummary" parameterType="int" resultType="HashMap">
        SELECT u.name,
               d.dept_name AS deptName
        FROM tb_user u
                 LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.id = #{userId}
          AND u.status = 1
    </select>
    <select id="searchUserInfo" parameterType="int" resultType="HashMap">
        SELECT u.name,
               u.sex,
               u.tel,
               u.email,
               d.dept_name                                      AS dept,
               u.status,
               (SELECT GROUP_CONCAT(role_name separator "，")
                FROM tb_role
                WHERE JSON_CONTAINS(u.role, CONVERT(id, CHAR))) AS roles
        FROM tb_user u
                 LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.id = #{userId}
          AND u.status = 1
    </select>
    <select id="searchDeptManagerId" parameterType="int" resultType="Integer">
        SELECT u2.id
        FROM tb_user u1
                 JOIN tb_user u2 ON u1.dept_id = u2.dept_id
                 JOIN tb_role r ON JSON_CONTAINS(u2.role, CAST(r.id AS CHAR))
        WHERE u1.id = #{id}
          AND r.id = 2
          AND u1.status = 1
          AND u2.status = 1
        ORDER BY u2.create_time DESC LIMIT 1
    </select>
    <select id="searchGmId" resultType="Integer">
        SELECT u.id
        FROM tb_user u
                 JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
        WHERE r.id = 1
          AND u.status = 1
        ORDER BY u.create_time DESC LIMIT 1
    </select>
    <select id="searchAllUser" resultType="HashMap">
        SELECT id, `name`
        FROM tb_user
        WHERE status = 1
    </select>
    <select id="login" parameterType="Map" resultType="Integer">
        SELECT id
        FROM tb_user
        WHERE username = #{username}
          AND password = MD5(CONCAT(MD5(#{username}), #{password})) LIMIT 1;
    </select>
    <select id="searchUserByPage" parameterType="Map" resultType="HashMap">
        SELECT DISTINCT u.id,
        u.name,
        u.sex,
        u.tel,
        u.email,
        d.dept_name AS dept,
        u.root,
        u.status,
        (
        SELECT GROUP_CONCAT( role_name separator "，" )
        FROM tb_role
        WHERE JSON_CONTAINS ( u.role, CONVERT ( id, CHAR ) )
        ) AS roles
        FROM tb_user u
        JOIN tb_role r ON JSON_CONTAINS ( u.role, CONVERT ( r.id, CHAR ) )
        LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE 1=1
        <if test="name!=null">
            AND u.name LIKE "%${name}%"
        </if>
        <if test="sex!=null">
            AND u.sex=#{sex}
        </if>
        <if test="role!=null">
            AND r.role_name=#{role}
        </if>
        <if test="deptId!=null">
            AND d.id=#{deptId}
        </if>
        <if test="status!=null">
            AND u.status=#{status}
        </if>
        LIMIT #{start}, #{length}
    </select>
    <select id="searchUserCount" parameterType="Map" resultType="long">
        SELECT COUNT(*)
        FROM tb_user u
        JOIN tb_role r ON JSON_CONTAINS ( u.role, CONVERT ( r.id, CHAR ) )
        WHERE 1=1
        <if test="name!=null">
            AND u.name LIKE "%${name}%"
        </if>
        <if test="sex!=null">
            AND u.sex=#{sex}
        </if>
        <if test="role!=null">
            AND r.role_name=#{role}
        </if>
        <if test="deptId!=null">
            AND u.dept_id=#{deptId}
        </if>
        <if test="status!=null">
            AND u.status=#{status}
        </if>
    </select>
    <select id="searchById" parameterType="int" resultType="HashMap">
        SELECT id,
               username,
               name,
               sex,
               tel,
               email,
               role,
               dept_id AS deptId,
               status
        FROM tb_user
        WHERE id = #{userId}
    </select>
    <select id="searchUserRoles" parameterType="int" resultType="String">
        SELECT r.role_name AS roleName
        FROM tb_user u
                 JOIN tb_role r ON JSON_CONTAINS(u.role, CONVERT(r.id, CHAR))
        WHERE u.id = #{userId}
    </select>
    <select id="searchNameAndDept" parameterType="int" resultType="HashMap">
        SELECT u.name, d.dept_name AS dept
        FROM tb_user u
                 LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.id = #{userId}
          AND u.status = 1
    </select>
    <insert id="insert" parameterType="com.example.hxds.mis.api.db.pojo.UserEntity">
        INSERT INTO tb_user
        SET username = #{username},
        password = MD5(CONCAT(MD5(#{username}), #{password})),
        name = #{name},
        sex = #{sex},
        <if test="tel!=null">
            tel = #{tel},
        </if>
        email=#{email},
        role = #{role},
        root = false,
        dept_id = #{deptId},
        status = #{status},
        create_time = #{createTime}
    </insert>
    <update id="updatePassword" parameterType="Map">
        UPDATE tb_user
        SET password=MD5(CONCAT(MD5(username), #{newPassword}))
        WHERE id = #{userId}
          AND password = MD5(CONCAT(MD5(username), #{oldPassword}))
    </update>
    <update id="update" parameterType="Map">
        UPDATE tb_user
        SET
        <if test="username!=null">
            username = #{username},
        </if>
        <if test="name!=null">
            name = #{name},
        </if>
        <if test="sex!=null">
            sex = #{sex},
        </if>
        <if test="tel!=null">
            tel = #{tel},
        </if>
        <if test="email!=null">
            email = #{email},
        </if>
        <if test="role!=null">
            role = #{role},
        </if>
        <if test="root!=null">
            root = #{root},
        </if>
        <if test="deptId!=null">
            dept_id = #{deptId},
        </if>
        <if test="status!=null">
            status = #{status},
        </if>
        id=#{userId}
        WHERE id=#{userId}
    </update>
    <delete id="deleteUserByIds">
        DELETE FROM tb_user
        WHERE id IN
        <foreach collection="array" open="(" separator="," close=")" item="one">
            #{one}
        </foreach>
        AND root=FALSE
    </delete>
</mapper>
